Object subclass: #AlgoVid	instanceVariableNames: 'personas burbujas colegios'	classVariableNames: ''	package: 'tp1'!!AlgoVid methodsFor: 'initialization' stamp: 'Andres 5/15/2021 20:33'!initialize 	personas := OrderedCollection new.	burbujas := OrderedCollection new.	colegios := OrderedCollection new.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Andres 5/17/2021 16:01'!diagnosticoDe: unNombrePersona 	^(self buscar: unNombrePersona en: personas) diagnosticoPersona.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Andres 5/17/2021 16:10'!puedeCircular: unNombrePersona 	^(self buscar: unNombrePersona en: personas) puedeCircular.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Andres 5/17/2021 16:00'!burbujaPinchada: unNombreBurbuja 	^(self buscar: unNombreBurbuja en: burbujas) burbujaPinchada.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Andres 5/18/2021 18:59'!contactoEstrechoEntre: unNombrePersona y: otroNombrePersona	| personaUno personaDos |	personaUno := (self buscar: unNombrePersona en: personas).	personaDos := (self buscar: otroNombrePersona en: personas).		personaUno agregarContactoEstrecho: personaDos.	personaDos agregarContactoEstrecho: personaUno.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Andres 5/17/2021 16:00'!agregarA: unNombreBurbuja alColegio: unNombreColegio 	 (self buscar: unNombreColegio en: colegios) agregarBurbuja: (self buscar: unNombreBurbuja en: burbujas).! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Andres 5/21/2021 17:47'!nuevaPersona: unNombrePersona	| unaPersona |	unaPersona := Persona new.	unaPersona nombre: unNombrePersona.	(self existe: unNombrePersona en: personas).	personas add: unaPersona.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Andres 5/17/2021 16:01'!clasesPresencialesEn: unNombreColegio	^(self buscar: unNombreColegio en: colegios) colegioEsPresencial.	! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Andres 5/17/2021 16:00'!agregarA: unNombrePersona aLaBurbuja: unNombreBurbuja 	(self buscar: unNombreBurbuja en: burbujas) nuevaPersonaEnBurbuja: (self buscar: unNombrePersona en: personas). ! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Andres 5/17/2021 16:00'!agregarSintoma: unNombreSintoma a: unNombrePersona 	(self buscar: unNombrePersona en: personas) agregarSintoma: unNombreSintoma.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Andres 5/17/2021 16:02'!esPersonaDeRiesgo: unNombrePersona 	(self buscar: unNombrePersona en: personas) esGrupoDeRiesgo. ! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Andres 5/17/2021 16:02'!esPersonalEsencial: unNombrePersona 	(self buscar: unNombrePersona en: personas) esEsencial.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Andres 5/21/2021 17:47'!nuevoColegio: unNombreColegio	| unColegio |	unColegio := Colegio new.	unColegio nombre: unNombreColegio. 	(self existe: unNombreColegio en: colegios).	colegios add: unColegio.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Andres 5/20/2021 14:45'!estaVacunadx: unNombrePersona 	^((self buscar: unNombrePersona en: personas) vacunar)estaVacunadx.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Andres 5/21/2021 17:40'!existe: unNombre en: unaColeccion 	unaColeccion detect: [ :objeto | (objeto nombre) = unNombre ] ifFound: [ ObjetoYaExisteEnColeccionError new signal ].! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Andres 5/21/2021 12:46'!buscar: unNombre en: unaColeccion 	| objetoBuscado |		(unaColeccion isEmpty) ifTrue: [ ColeccionNoEncontradaError new signal ].   objetoBuscado := unaColeccion detect: [ :objeto | (objeto nombre) = unNombre ] ifNone: [ ObjetoBuscadoNoExisteError new signal ].   ^objetoBuscado.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Andres 5/21/2021 17:48'!nuevaBurbuja: unNombreBurbuja	| unaBurbuja |	unaBurbuja := Burbuja new.	unaBurbuja nombre: unNombreBurbuja.	(self existe: unNombreBurbuja en: burbujas).	burbujas add: unaBurbuja.! !Object subclass: #Burbuja	instanceVariableNames: 'personasBurbuja nombre pinchada saludBurbuja'	classVariableNames: ''	package: 'tp1'!!Burbuja methodsFor: 'as yet unclassified' stamp: 'Andres 5/15/2021 20:30'!nuevaPersonaEnBurbuja: unaPersona	personasBurbuja add: unaPersona.! !!Burbuja methodsFor: 'as yet unclassified' stamp: 'Andres 5/15/2021 20:28'!burbujaPinchada 	personasBurbuja detect: [:persona | (persona diagnosticoPersona) = 'Positivo'] ifFound: [saludBurbuja := BurbujaSiEstaPinchada new].	saludBurbuja diagnosticarPersonasBurbuja: personasBurbuja .	^saludBurbuja estaPinchada.! !!Burbuja methodsFor: 'initialization' stamp: 'Andres 5/15/2021 16:13'!initialize 	personasBurbuja := OrderedCollection new.	saludBurbuja := BurbujaNoEstaPinchada new.! !!Burbuja methodsFor: 'accessing' stamp: 'Andres 5/15/2021 00:13'!nombre: unNombreBurbuja 	nombre := unNombreBurbuja.! !!Burbuja methodsFor: 'accessing' stamp: 'Andres 5/15/2021 00:11'!nombre	^nombre.! !Object subclass: #BurbujaPinchada	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1'!BurbujaPinchada subclass: #BurbujaNoEstaPinchada	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1'!!BurbujaNoEstaPinchada methodsFor: 'as yet unclassified' stamp: 'Andres 5/16/2021 21:51'!diagnosticarPersonasBurbuja: personasBurbuja 	nil.! !!BurbujaNoEstaPinchada methodsFor: 'as yet unclassified' stamp: 'Andres 5/16/2021 21:51'!estaPinchada	^false.! !BurbujaPinchada subclass: #BurbujaSiEstaPinchada	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1'!!BurbujaSiEstaPinchada methodsFor: 'as yet unclassified' stamp: 'Andres 5/15/2021 17:25'!diagnosticarPersonasBurbuja: personasBurbuja 	personasBurbuja do: [:persona | persona noPuedeCircular].! !!BurbujaSiEstaPinchada methodsFor: 'as yet unclassified' stamp: 'Andres 5/15/2021 15:59'!estaPinchada 	^true.! !Object subclass: #Colegio	instanceVariableNames: 'burbujasColegio burbujas presencialidad nombre'	classVariableNames: ''	package: 'tp1'!!Colegio methodsFor: 'as yet unclassified' stamp: 'Andres 5/20/2021 16:29'!colegioEsPresencial	presencialidad actualizarPresencialidad: self.	^presencialidad esPresencial.! !!Colegio methodsFor: 'as yet unclassified' stamp: 'Andres 5/20/2021 16:26'!colegioNoEsPresencial	presencialidad := ClasesNoPresenciales new.! !!Colegio methodsFor: 'as yet unclassified' stamp: 'Andres 5/21/2021 14:14'!agregarBurbuja: unaBurbuja	burbujas add: unaBurbuja. ! !!Colegio methodsFor: 'as yet unclassified' stamp: 'Andres 5/20/2021 16:24'!devolverBurbujas	^burbujas.! !!Colegio methodsFor: 'initialization' stamp: 'Andres 5/15/2021 20:51'!initialize 	burbujas := OrderedCollection new.	presencialidad := ClasesSiPresenciales new.! !!Colegio methodsFor: 'accessing' stamp: 'Andres 5/17/2021 16:22'!nombre: unNombreColegio	nombre := unNombreColegio.! !!Colegio methodsFor: 'accessing' stamp: 'Andres 5/17/2021 16:11'!nombre	^nombre.! !Object subclass: #DiagnosticoPersonaPositivo	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1'!!DiagnosticoPersonaPositivo methodsFor: 'as yet unclassified' stamp: 'Andres 5/18/2021 22:42'!actualizarDiagnostico: sintomas conSalud: salud	^nil.! !!DiagnosticoPersonaPositivo methodsFor: 'as yet unclassified' stamp: 'Andres 5/18/2021 22:12'!diagnostico	^'Positivo'.! !Object subclass: #DiagnosticoPersonaSaludable	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1'!!DiagnosticoPersonaSaludable methodsFor: 'as yet unclassified' stamp: 'Andres 5/18/2021 22:40'!actualizarDiagnostico: sintomas conSalud: salud	(sintomas size ~= 0) ifTrue: [ salud actualizarDiagnosticoSospechoso ].! !!DiagnosticoPersonaSaludable methodsFor: 'as yet unclassified' stamp: 'Andres 5/18/2021 22:12'!diagnostico	^'Saludable'.! !Object subclass: #DiagnosticoPersonaSospechosa	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1'!!DiagnosticoPersonaSospechosa methodsFor: 'as yet unclassified' stamp: 'Andres 5/18/2021 22:44'!actualizarDiagnostico: sintomas conSalud: salud	(sintomas size = 3) ifTrue: [         sintomas detect: [ :x| (x sintomaHabitual)] ifFound: [ salud actualizarDiagnosticoPositivo ]].   ((sintomas size >= 4)) ifTrue: [ salud actualizarDiagnosticoPositivo].! !!DiagnosticoPersonaSospechosa methodsFor: 'as yet unclassified' stamp: 'Andres 5/20/2021 14:50'!diagnostico	^'Sospechoso'.! !Object subclass: #Esencial	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1'!Object subclass: #Persona	instanceVariableNames: 'nombre personaNoCircula circula vacunado sintomas salud escencial esencial contactoEstrecho esRiesgo esGrupoDeRiesgo grupoDeRiesgo'	classVariableNames: ''	package: 'tp1'!!Persona methodsFor: 'initialization' stamp: 'Andres 6/15/2021 23:40'!initialize 	vacunado := PersonaNoEstaVacunada new.	salud := SaludPersona new.	esencial := PersonaNoEsencial new.	contactoEstrecho := OrderedCollection new.	grupoDeRiesgo := PersonaNoEsDeRiesgo new.! !!Persona methodsFor: 'accessing' stamp: 'Andres 5/15/2021 00:12'!nombre: unNombrePersona 	nombre := unNombrePersona .! !!Persona methodsFor: 'accessing' stamp: 'Andres 6/15/2021 23:47'!vacunar	vacunado := PersonaSiEstaVacunada new.	"grupoDeRiesgo actualizarCirculacion: self."! !!Persona methodsFor: 'accessing' stamp: 'Andres 6/15/2021 23:19'!esGrupoDeRiesgo	grupoDeRiesgo := PersonaSiEsDeRiesgo new.	"circula := PersonaNoCircula new."! !!Persona methodsFor: 'accessing' stamp: 'Andres 5/11/2021 18:20'!nombre 	^nombre.! !!Persona methodsFor: 'as yet unclassified' stamp: 'Andres 5/11/2021 21:00'!estaVacunadx	^vacunado estaVacunadx.	! !!Persona methodsFor: 'as yet unclassified' stamp: 'Andres 6/15/2021 23:19'!agregarSintoma: unNombreSintoma 	salud nuevoSintoma: unNombreSintoma.	"circula := PersonaNoCircula new."! !!Persona methodsFor: 'as yet unclassified' stamp: 'Andres 6/15/2021 23:40'!agregarContactoEstrecho: unaPersona 	contactoEstrecho add: unaPersona.	"(unaPersona esSaludable) ifFalse: [ salud actualizarDiagnosticoSospechoso ]."			"ESTO ERA LO QUE YA ESTABA	(unaPersona diagnosticoPersona = 'Sospechoso') ifTrue: (circula := PersonaNoCircula new)."	! !!Persona methodsFor: 'as yet unclassified' stamp: 'Andres 5/13/2021 22:48'!diagnosticoPersona	^salud diagnosticoPersona.! !!Persona methodsFor: 'as yet unclassified' stamp: 'Andres 6/15/2021 23:19'!esEsencial	esencial := PersonaSiEsencial new.	"grupoDeRiesgo actualizarCirculacion: self."! !!Persona methodsFor: 'as yet unclassified' stamp: 'Andres 6/15/2021 23:33'!esSaludable	"| saludable |	saludable := true.		(salud esSaludable) ifFalse: [ saludable := false ].	contactoEstrecho detect: [ :persona | (persona esSaludable) == false ] ifFound: [ saludable := false ] .	^saludable."	^salud esSaludable.! !!Persona methodsFor: 'as yet unclassified' stamp: 'Andres 6/15/2021 23:46'!puedeCircular 	"^circula puedeCircular."	| circulax |	circulax := false.		((self estaVacunadx) | (esencial esEsencial) ) ifTrue: [ circulax := true ].	(grupoDeRiesgo esRiesgo) ifTrue: [ circulax := false ].	"(self esSaludable) ifFalse: [ circulax := false ]."	(salud diagnosticoPersona == 'Saludable') ifFalse: [ circulax := false ].	"CORREGIR LO DE SALUDABLE PORQUE ROMPE EL TELL DONT ASK"		^circulax.! !Esencial subclass: #PersonaNoEsencial	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1'!!PersonaNoEsencial methodsFor: 'as yet unclassified' stamp: 'Andres 5/13/2021 23:09'!esEsencial 	^false.! !Esencial subclass: #PersonaSiEsencial	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1'!!PersonaSiEsencial methodsFor: 'as yet unclassified' stamp: 'Andres 5/13/2021 23:09'!esEsencial 	^true.! !Object subclass: #Prescencialidad	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1'!Prescencialidad subclass: #ClasesNoPresenciales	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1'!!ClasesNoPresenciales methodsFor: 'as yet unclassified' stamp: 'Andres 5/15/2021 20:50'!esPresencial	^false.! !!ClasesNoPresenciales methodsFor: 'as yet unclassified' stamp: 'Andres 5/20/2021 16:28'!actualizarPresencialidad: unColegio	^nil.! !Prescencialidad subclass: #ClasesSiPresenciales	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1'!!ClasesSiPresenciales methodsFor: 'as yet unclassified' stamp: 'Andres 5/15/2021 20:50'!esPresencial 	^true.! !!ClasesSiPresenciales methodsFor: 'as yet unclassified' stamp: 'Andres 5/20/2021 16:31'!actualizarPresencialidad: unColegio    | burbujas |    burbujas := unColegio devolverBurbujas.    (((burbujas count: [:x|x burbujaPinchada ])/burbujas size) > 0.4) ifTrue: [unColegio colegioNoEsPresencial].! !Object subclass: #Riesgo	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1'!Riesgo subclass: #PersonaNoEsDeRiesgo	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1'!!PersonaNoEsDeRiesgo methodsFor: 'as yet unclassified' stamp: 'Andres 5/14/2021 00:20'!actualizarCirculacion: unaPersona 	unaPersona siPuedeCircular.! !!PersonaNoEsDeRiesgo methodsFor: 'as yet unclassified' stamp: 'Andres 5/13/2021 23:42'!esRiesgo	^false.! !Riesgo subclass: #PersonaSiEsDeRiesgo	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1'!!PersonaSiEsDeRiesgo methodsFor: 'as yet unclassified' stamp: 'Andres 5/14/2021 00:14'!actualizarCirculacion: unaPersona 	unaPersona noPuedeCircular.	! !!PersonaSiEsDeRiesgo methodsFor: 'as yet unclassified' stamp: 'Andres 5/13/2021 23:43'!esRiesgo	^true.! !Object subclass: #SaludPersona	instanceVariableNames: 'sintomas diagnostico'	classVariableNames: ''	package: 'tp1'!!SaludPersona methodsFor: 'as yet unclassified' stamp: 'Andres 5/18/2021 22:38'!actualizarDiagnosticoPositivo	diagnostico := DiagnosticoPersonaPositivo new.! !!SaludPersona methodsFor: 'as yet unclassified' stamp: 'Andres 5/18/2021 22:48'!diagnosticoPersona 	^diagnostico diagnostico.! !!SaludPersona methodsFor: 'as yet unclassified' stamp: 'Andres 5/18/2021 22:38'!actualizarDiagnosticoSospechoso	diagnostico := DiagnosticoPersonaSospechosa new.! !!SaludPersona methodsFor: 'as yet unclassified' stamp: 'Andres 6/15/2021 23:30'!esSaludable	^(self diagnosticoPersona == 'Saludable') ifTrue: [ true ] ifFalse: [ false ].! !!SaludPersona methodsFor: 'as yet unclassified' stamp: 'Andres 5/20/2021 00:21'!nuevoSintoma: unNuevoSintoma	| unSintoma |	unSintoma := Sintoma new.	unSintoma nombreSintoma: unNuevoSintoma .	sintomas add: unSintoma .	diagnostico actualizarDiagnostico: sintomas conSalud: self.! !!SaludPersona methodsFor: 'initialization' stamp: 'Andres 5/18/2021 22:33'!initialize 	sintomas := OrderedCollection new.	diagnostico := DiagnosticoPersonaSaludable new.! !Object subclass: #Sintoma	instanceVariableNames: 'nombreSintoma sintomasHabituales'	classVariableNames: ''	package: 'tp1'!!Sintoma methodsFor: 'accessing' stamp: 'Andres 5/13/2021 20:50'!nombreSintoma	^nombreSintoma.! !!Sintoma methodsFor: 'accessing' stamp: 'Andres 5/13/2021 20:49'!nombreSintoma: unNombreSintoma	nombreSintoma := unNombreSintoma. ! !!Sintoma methodsFor: 'as yet unclassified' stamp: 'Andres 5/13/2021 22:59'!sintomaHabitual	^ sintomasHabituales includes: (self nombreSintoma). ! !!Sintoma methodsFor: 'initialization' stamp: 'Andres 5/14/2021 00:35'!initialize 	sintomasHabituales := OrderedCollection new.	sintomasHabituales add: 'Fiebre'; add: 'Tos'; add: 'Cansancio'.! !Object subclass: #Vacunada	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1'!Vacunada subclass: #PersonaNoEstaVacunada	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1'!!PersonaNoEstaVacunada methodsFor: 'as yet unclassified' stamp: 'Andres 5/11/2021 21:01'!estaVacunadx 	^false.! !Vacunada subclass: #PersonaSiEstaVacunada	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1'!!PersonaSiEstaVacunada methodsFor: 'as yet unclassified' stamp: 'Andres 5/11/2021 21:01'!estaVacunadx 	^true.! !
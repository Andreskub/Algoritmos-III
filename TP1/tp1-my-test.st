TestCase subclass: #AlgoTest	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105238-test'!!AlgoTest methodsFor: 'tests' stamp: 'Andres 5/17/2021 16:52'!test03PersonaDeRiesgoNoPuedeCircular		algovid nuevaPersona: 'Pedro'.	algovid esPersonaDeRiesgo: 'Pedro'.	self deny: ( algovid puedeCircular: 'Pedro' ).	! !!AlgoTest methodsFor: 'tests' stamp: 'Andres 5/17/2021 17:38'!test06PersonaConAlMenosUnSintomaEsSospechoso		algovid nuevaPersona: 'Francisco'.	algovid agregarSintoma: 'Tos' a: 'Francisco'.		self assert: (algovid diagnosticoDe: 'Francisco') equals: 'Sospechoso'.	! !!AlgoTest methodsFor: 'tests' stamp: 'Andres 5/17/2021 16:36'!test01PersonaPorDefectoNoPuedeCircular		algovid nuevaPersona: 'Carlos'.	self deny: ( algovid puedeCircular: 'Carlos' ).	! !!AlgoTest methodsFor: 'tests' stamp: 'Andres 5/17/2021 17:38'!test07PersonaConTresSintomasYUnoEsHabitualEsPositivo		algovid nuevaPersona: 'Francisco'.		algovid agregarSintoma: 'Resfrio' a: 'Francisco'.	algovid agregarSintoma: 'Mareos' a: 'Francisco'.	algovid agregarSintoma: 'Tos' a: 'Francisco'.		self assert: (algovid diagnosticoDe: 'Francisco') equals: 'Positivo'.	! !!AlgoTest methodsFor: 'tests' stamp: 'Andres 5/17/2021 17:37'!test10PersonaConContactoEstrechoPositivoNoPuedeCircular		algovid nuevaPersona: 'Jorge'.	algovid nuevaPersona: 'Mauro'.		algovid agregarSintoma: 'Cansacio' a: 'Mauro'.	algovid agregarSintoma: 'Diarrea' a: 'Mauro'.	algovid agregarSintoma: 'Mareos' a: 'Mauro'.				algovid contactoEstrechoEntre: 'Jorge' y: 'Mauro'.		self deny: ( algovid puedeCircular: 'Jorge' ).	! !!AlgoTest methodsFor: 'tests' stamp: 'Andres 5/17/2021 17:39'!test05PersonaSinSintomasEsSaludable		algovid nuevaPersona: 'Azul'.		self assert: (algovid diagnosticoDe: 'Azul') equals: 'Saludable'.	! !!AlgoTest methodsFor: 'tests' stamp: 'Andres 5/17/2021 17:38'!test09PersonaConContactoEstrechoSospechosoNoPuedeCircular		algovid nuevaPersona: 'Jorge'.	algovid nuevaPersona: 'Mauro'.		algovid agregarSintoma: 'Cansacio' a: 'Mauro'.	algovid contactoEstrechoEntre: 'Jorge' y: 'Mauro'.		self deny: ( algovid puedeCircular: 'Jorge' ).	! !!AlgoTest methodsFor: 'tests' stamp: 'Andres 5/17/2021 16:55'!test04PersonaEsencialPuedeCircular		algovid nuevaPersona: 'Monica'.	algovid esPersonalEsencial: 'Monica'.	self assert: ( algovid puedeCircular: 'Monica' ).	! !!AlgoTest methodsFor: 'tests' stamp: 'Andres 5/17/2021 16:52'!test02PersonaVacunadaPuedeCircular		algovid nuevaPersona: 'Juan'.	algovid estaVacunadx: 'Juan'.	self assert: ( algovid puedeCircular: 'Juan' ).	! !!AlgoTest methodsFor: 'tests' stamp: 'Andres 5/17/2021 17:38'!test08PersonaConCuatroOMasSintomasEsPositivo		algovid nuevaPersona: 'Maria'.		algovid agregarSintoma: 'Resfrio' a: 'Maria'.	algovid agregarSintoma: 'Mareos' a: 'Maria'.	algovid agregarSintoma: 'Vista' a: 'Maria'.	algovid agregarSintoma: 'Diarrea' a: 'Maria'.		self assert: (algovid diagnosticoDe: 'Maria') equals: 'Positivo'.	! !!AlgoTest methodsFor: 'running' stamp: 'Andres 5/16/2021 23:40'!setUp	algovid := AlgoVid new.! !Error subclass: #BurbujaBuscadaNoExiste	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105238-test'!TestCase subclass: #BurbujaTest	instanceVariableNames: 'burbuja'	classVariableNames: ''	package: 'tp1-105238-test'!!BurbujaTest methodsFor: 'running' stamp: 'Andres 5/17/2021 16:25'!setUp	burbuja := Burbuja new.! !Error subclass: #ObjetoBuscadoNoExiste	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105238-test'!TestCase subclass: #PersonaTest	instanceVariableNames: 'persona'	classVariableNames: ''	package: 'tp1-105238-test'!!PersonaTest methodsFor: 'running' stamp: 'Andres 5/17/2021 15:49'!setUp	persona := Persona new.! !